{"version":3,"sources":["components/common/FormsControl/FormsControl.module.css","assets/up-arrow.svg","assets/down-arrow.svg","components/common/Paginator/Paginator.module.css","assets/warning-speech-bubble.svg","components/UsersTable/UsersTable.module.css","components/User/User.module.css","validators/validators.js","redux/app-reducer.js","components/common/FormsControl/FormsControl.js","components/Registration/Registration.jsx","components/User/User.jsx","components/common/Paginator/Paginator.jsx","components/UsersTable/UsersTable.jsx","App.js","serviceWorker.js","redux/redux-store.js","index.js","components/Registration/Registration.module.css"],"names":["module","exports","min","max","initialState","users","id","date","name","email","phone","distance","payment","currentUserId","CurrentPage","pageSize","portionSize","appReducer","state","action","type","newCurrentId","phoneWith7","corrDataArr","split","corrData","reverse","join","page","required","value","undefined","minLength5","length","maxLength40","test","minPayment","dateValid","year","Date","getFullYear","formDate","Input","input","meta","touched","error","props","hasError","className","style","formControl","attention","alt","src","createField","validationArray","component","placeholder","Field","validate","phoneMask","createTextMask","pattern","RegistrationFormRedux","reduxForm","form","onSubmitSuccess","result","dispatch","reset","onSubmit","handleSubmit","registrationForm","selectWrapper","disabled","pristine","submitting","invalid","summaryError","Registration","addUser","registrationWrapper","registration","User","regNumber","userWrapper","Paginator","totalItemsCount","currentPage","onPageChange","pages","useState","portionNumber","setPortionNumber","totalPagesCount","Math","ceil","i","push","portionsCount","rightPortionBorder","leftPortionBorder","paginator","onClick","filter","item","map","active","UsersTable","totalItems","changeCurrentPage","currentSortField","changeCurrentSortField","sortDirection","changeSortDirection","usersArray","sortArray","sort","a","b","sortTable","u","key","UsersTableWrapper","sortButtonsWrapper","arrowUp","arrowDown","titleWrapper","RegistrationContainer","connect","UsersTableContainer","app","App","Boolean","window","location","hostname","match","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","formReducer","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.76ab0eb1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControl_formControl__2NNhG\",\"error\":\"FormsControl_error__2VDiI\",\"login\":\"FormsControl_login__5JVqY\",\"attention\":\"FormsControl_attention__TCNlJ\"};","module.exports = __webpack_public_path__ + \"static/media/up-arrow.13e1a3ad.svg\";","module.exports = __webpack_public_path__ + \"static/media/down-arrow.bba397db.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__3A_ga\",\"active\":\"Paginator_active__E75aS\"};","module.exports = __webpack_public_path__ + \"static/media/warning-speech-bubble.673d7674.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"UsersTableWrapper\":\"UsersTable_UsersTableWrapper__3VQMs\",\"sortButtonsWrapper\":\"UsersTable_sortButtonsWrapper__dlPay\",\"active\":\"UsersTable_active__2HrFP\",\"titleWrapper\":\"UsersTable_titleWrapper__XMCBU\",\"regNumber\":\"UsersTable_regNumber__2Pqks\",\"name\":\"UsersTable_name__QvK1r\",\"date\":\"UsersTable_date__zwjRg\",\"email\":\"UsersTable_email__3G8n5\",\"phone\":\"UsersTable_phone__2H-2g\",\"distance\":\"UsersTable_distance__2-kJr\",\"payment\":\"UsersTable_payment__3GQLN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userWrapper\":\"User_userWrapper__frW9z\",\"regNumber\":\"User_regNumber__1lOl6\",\"name\":\"User_name__35srV\",\"date\":\"User_date__1ztco\",\"email\":\"User_email__3jfwy\",\"phone\":\"User_phone__3Xo0-\",\"distance\":\"User_distance__3wPqU\",\"payment\":\"User_payment__2dzBx\"};","export const required = value => value ? undefined : \"field is required\"\r\n\r\nexport const minLength = min => value =>\r\n    value && value.length < min ? `Must be ${min} characters or more` : undefined\r\n\r\nexport const minLength5 = minLength(5)\r\n\r\nconst maxLength = max => value =>\r\n    value && value.length > max ? `Must be ${max} characters or less` : undefined\r\n\r\nexport const maxLength40 = maxLength(40)\r\n\r\nexport const email = value =>\r\n    value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value) ?\r\n        'Invalid email address' : undefined\r\nexport const minPayment =  value =>\r\n    value<=0? 'Pay something!!!' : undefined\r\n\r\nexport const dateValid = (value) => {\r\n    let dateObj = new Date()\r\n    let year = dateObj.getFullYear()\r\n    let formDate =value.split(\"-\")\r\n    return formDate[0]<year && formDate[0]>1900?\r\n        undefined :'wrongDate' }","const ADD_USER = \"app/ADD_USER\";\r\nconst CHANGE_CURRENT_PAGE = \"app/CHANGE_CURRENT_PAGE\";\r\n\r\n\r\nlet initialState = {\r\n    users: [\r\n        {\r\n            id: 1,\r\n            date: \"11.03.1987\",\r\n            name: \"Куклина Мария Ивановна\",\r\n            email: \"kyklina@mail.ru\",\r\n            phone: \"+79223625999\",\r\n            distance: 5,\r\n            payment: 500\r\n        },\r\n        {\r\n            id: 2,\r\n            date: \"8.05.1997\",\r\n            name: \"Мокрушина Галина Юрьевна\",\r\n            email: \"mokrushina@mail.ru\",\r\n            phone: \"+79881125999\",\r\n            distance: 10,\r\n            payment: 300\r\n        },\r\n        {\r\n            id: 3,\r\n            date: \"24.01.1886\",\r\n            name: \"Ольга Сергеевна Заводская\",\r\n            email: \"olga.zavodckaia@mail.ru\",\r\n            phone: \"+79008011000\",\r\n            distance: 3,\r\n            payment: 1500\r\n        },\r\n\r\n    ],\r\n    currentUserId: 3,\r\n    CurrentPage: 1,\r\n    pageSize: 5,\r\n    portionSize: 3\r\n}\r\nlet appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_USER: {\r\n            const newCurrentId = state.currentUserId + 1\r\n            const phoneWith7 = `+7${action.phone}`\r\n            const corrDataArr = action.date.split('-')\r\n            const corrData = [...corrDataArr].reverse().join('.')\r\n            return {\r\n                ...state, currentUserId: newCurrentId, users: [...state.users, {\r\n                    id: newCurrentId,\r\n                    date: corrData,\r\n                    name: action.name,\r\n                    email: action.email,\r\n                    phone: phoneWith7,\r\n                    distance: action.distance,\r\n                    payment: action.payment\r\n                }]\r\n            }\r\n\r\n        }\r\n        case CHANGE_CURRENT_PAGE: {\r\n            return {\r\n                ...state, CurrentPage: action.page\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const addUser = (date, name, email, phone, distance, payment) => ({\r\n    type: ADD_USER,\r\n    date,\r\n    name,\r\n    email,\r\n    phone,\r\n    distance,\r\n    payment\r\n})\r\nexport const changeCurrentPage = (page) => ({\r\n    type: CHANGE_CURRENT_PAGE,\r\n    page\r\n})\r\n\r\nexport default appReducer\r\n\r\n","import React from 'react'\r\nimport style from './FormsControl.module.css'\r\nimport {Field} from \"redux-form\";\r\nimport {required} from \"../../../validators/validators\";\r\nimport attention from '../../../assets/warning-speech-bubble.svg'\r\n\r\nexport const Input = ({input, meta: {touched, error}, ...props}) => {\r\n    const hasError = touched && error\r\n    return (\r\n        <div className={style.formControl + \" \" + (hasError ? style.error : '')}>\r\n            <input {...input} {...props}  />\r\n            {hasError && <img className={style.attention} alt='attention' src={attention}/>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport const createField = (validationArray, component, name, type, placeholder, props) => {\r\n    return <div>\r\n        <Field validate={[...validationArray]} component={component} name={name} type={type}\r\n               placeholder={placeholder} {...props}/>\r\n    </div>\r\n}\r\n\r\n\r\ncreateField([required], Input, \"email\", \"input\")\r\n\r\n","import React from 'react'\r\nimport {Field, reduxForm, reset} from \"redux-form\";\r\nimport {createField, Input} from \"../common/FormsControl/FormsControl\";\r\nimport {\r\n    dateValid,\r\n    email,\r\n    maxLength40,\r\n    minLength5,\r\n    minPayment,\r\n    required\r\n} from \"../../validators/validators\";\r\nimport {createTextMask} from 'redux-form-input-masks'\r\nimport style from './Registration.module.css'\r\n\r\nconst phoneMask = createTextMask({\r\n    pattern: '+7(999) 999-9999',\r\n});\r\n\r\nconst Registration = ({addUser}) => {\r\n    const onSubmit = ({date, name, email, phone, distance, payment}) => {\r\n        addUser(date, name, email, phone, +distance, +payment)\r\n    }\r\n    return <div className={style.registrationWrapper}>\r\n        <div className={style.registration}>\r\n            <h2>Заявка на участие в благотворительном забеге</h2>\r\n            <RegistrationFormRedux onSubmit={onSubmit}/>\r\n        </div>\r\n    </div>\r\n}\r\nconst registrationForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={style.registrationForm}>\r\n            {createField([required, minLength5, maxLength40], Input, \"name\", \"input\", \"ФИО\")}\r\n            {createField([required, dateValid], Input, \"date\", \"date\", 'Дата рождения')}\r\n            {createField([required, email], Input, \"email\", \"input\", \"Email\",)}\r\n            {createField([required], Input, \"phone\", \"tel\", \"phone\", {...phoneMask})}\r\n            <div className={style.selectWrapper}>\r\n                <label>Длинна дистанции, км</label>\r\n                <Field name=\"distance\" component=\"select\" validate={[required]}>\r\n                    <option></option>\r\n                    <option value=\"3\">3</option>\r\n                    <option value=\"5\">5</option>\r\n                    <option value=\"10\">10</option>\r\n                </Field>\r\n            </div>\r\n            {createField([required, minPayment], Input, \"payment\", \"number\", \"Сумма взноса\")}\r\n            <button disabled={props.pristine || props.submitting || props.invalid}>Отправить заявку</button>\r\n            {props.error && <div className={style.summaryError}>\r\n                {props.error}\r\n            </div>}\r\n        </form>\r\n    )\r\n}\r\nconst afterSubmit = (result, dispatch) => {\r\n    dispatch(reset('Registration'))\r\n}\r\nconst RegistrationFormRedux = reduxForm({form: 'Registration', onSubmitSuccess: afterSubmit})(registrationForm)\r\nexport default Registration","import React from 'react';\r\nimport style from \"./User.module.css\"\r\n\r\nconst User = ({name, date, email, phone, distance, payment, regNumber}) => {\r\n    return (\r\n        <div className={style.userWrapper}>\r\n            <span className={style.regNumber}>{regNumber}</span><span className={style.name}>{name}</span><span\r\n            className={style.date}>{date}</span><span className={style.email}>{email}</span><span\r\n            className={style.phone}>{phone}</span><span\r\n            className={style.distance}>{distance}</span><span className={style.payment}>{payment}</span>\r\n        </div>\r\n    )\r\n}\r\nexport default User","import React, {useState} from 'react'\r\nimport style from './Paginator.module.css'\r\n\r\nconst Paginator = ({totalItemsCount, currentPage, pageSize, onPageChange, portionSize = 5}) => {\r\n\r\n    let pages = []\r\n    let [portionNumber, setPortionNumber] = useState(1)\r\n    let totalPagesCount = Math.ceil(totalItemsCount / pageSize)\r\n    for (let i = 1; i <= totalPagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n    let portionsCount = totalPagesCount / portionSize\r\n    let rightPortionBorder = portionNumber * pageSize\r\n    let leftPortionBorder = (portionNumber - 1) * pageSize + 1\r\n    return <div className={style.paginator}>\r\n        {portionNumber > 1 && <button onClick={() => {\r\n            setPortionNumber(portionNumber - 1)\r\n        }}>{\"<\"}</button>}\r\n        {pages.filter(item => item <= rightPortionBorder && item >= leftPortionBorder).map(item => <button\r\n            className={(item === currentPage) ? style.active : \"\"}\r\n            onClick={() => {\r\n                onPageChange(item, pageSize)\r\n            }}>{item}</button>)}\r\n        {portionsCount > portionNumber && <button onClick={() => {\r\n            setPortionNumber(portionNumber + 1)\r\n        }}>{\">\"}</button>}\r\n    </div>\r\n}\r\n\r\nexport default Paginator","import React, {useState} from 'react';\r\nimport User from \"../User/User\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport style from './UsersTable.module.css'\r\nimport arrowUp from '../../assets/up-arrow.svg'\r\nimport arrowDown from '../../assets/down-arrow.svg'\r\n\r\n\r\nconst UsersTable = ({users, totalItems, CurrentPage, portionSize, pageSize, changeCurrentPage}) => {\r\n    const [currentSortField, changeCurrentSortField] = useState(\"id\")\r\n    const [sortDirection, changeSortDirection] = useState(\"toMax\")\r\n    let sortTable = (currentSortField, sortDirection) => {\r\n        let sortArray = []\r\n        if (sortDirection === \"toMin\") {\r\n            sortArray = [...users].sort((function (a, b) {\r\n                if (a[currentSortField] < b[currentSortField]) {\r\n                    return 1;\r\n                }\r\n                if (a[currentSortField] > b[currentSortField]) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            }))\r\n        }\r\n        if (sortDirection === \"toMax\") {\r\n            sortArray = [...users].sort((function (a, b) {\r\n                if (a[currentSortField] > b[currentSortField]) {\r\n                    return 1;\r\n                }\r\n                if (a[currentSortField] < b[currentSortField]) {\r\n                    return -1;\r\n                }\r\n                return 0;\r\n            }))\r\n        }\r\n        return sortArray\r\n    }\r\n    const usersArray = sortTable(currentSortField, sortDirection).filter((item, i) => (i + 1 <= (CurrentPage * pageSize) && i + 1 > ((CurrentPage - 1) * pageSize))).map(u =>\r\n        <User regNumber={u.id}\r\n              name={u.name}\r\n              date={u.date}\r\n              email={u.email}\r\n              phone={u.phone}\r\n              distance={u.distance}\r\n              payment={u.payment}\r\n              key={u.id}/>)\r\n    return (\r\n        <div className={style.UsersTableWrapper}>\r\n            <h2>Список участников</h2>\r\n            <div className={style.sortButtonsWrapper}>\r\n                <span>Сортировать по:</span>\r\n                <button className={currentSortField === \"id\" ? style.active : \"\"} onClick={() => {\r\n                    changeCurrentSortField(\"id\")\r\n                    if (sortDirection === \"toMax\") {\r\n                        changeSortDirection(\"toMin\")\r\n                    } else if (sortDirection === \"toMin\") {\r\n                        changeSortDirection(\"toMax\")\r\n                    }\r\n                }}>Дата регистрации\r\n                    {(currentSortField === \"id\" && sortDirection === \"toMax\") ? <img src={arrowUp}/> : ''}\r\n                    {(currentSortField === \"id\" && sortDirection === \"toMin\") ? <img src={arrowDown}/> : ''}\r\n                </button>\r\n                <button className={currentSortField === \"distance\" ? style.active : \"\"} onClick={() => {\r\n                    changeCurrentSortField(\"distance\")\r\n                    if (sortDirection === \"toMax\") {\r\n                        changeSortDirection(\"toMin\")\r\n                    } else if (sortDirection === \"toMin\") {\r\n                        changeSortDirection(\"toMax\")\r\n                    }\r\n                }}>Дистанция\r\n                    {(currentSortField === \"distance\" && sortDirection === \"toMax\") ? <img src={arrowUp}/> : ''}\r\n                    {(currentSortField === \"distance\" && sortDirection === \"toMin\") ? <img src={arrowDown}/> : ''}\r\n                </button>\r\n                <button className={currentSortField === \"payment\" ? style.active : \"\"} onClick={() => {\r\n                    changeCurrentSortField(\"payment\")\r\n                    if (sortDirection === \"toMax\") {\r\n                        changeSortDirection(\"toMin\")\r\n                    } else if (sortDirection === \"toMin\") {\r\n                        changeSortDirection(\"toMax\")\r\n                    }\r\n                }}>Взнос\r\n                    {(currentSortField === \"payment\" && sortDirection === \"toMax\") ? <img src={arrowUp}/> : ''}\r\n                    {(currentSortField === \"payment\" && sortDirection === \"toMin\") ? <img src={arrowDown}/> : ''}\r\n                </button>\r\n            </div>\r\n            <div className={style.titleWrapper}>\r\n                <span className={style.regNumber}>№</span><span className={style.name}>ФИО участника</span><span\r\n                className={style.date}>Дата рождения</span><span className={style.email}>Адрес e-mail</span><span\r\n                className={style.phone}>Номер телефона</span><span\r\n                className={style.distance}>Дистанция</span><span\r\n                className={style.payment}>Взнос</span>\r\n            </div>\r\n            {usersArray}\r\n            {totalItems > 5 ? <Paginator currentPage={CurrentPage} pageSize={pageSize} portionSize={portionSize}\r\n                                         totalItemsCount={totalItems} onPageChange={changeCurrentPage}/> : \"\"}\r\n        </div>\r\n    )\r\n}\r\nexport default UsersTable\r\n","import React from 'react';\nimport './App.css';\nimport {addUser, changeCurrentPage} from \"./redux/app-reducer\";\nimport {connect} from \"react-redux\";\nimport Registration from \"./components/Registration/Registration\";\nimport UsersTable from \"./components/UsersTable/UsersTable\";\n\nconst App = () => {\n    return (\n        <div className=\"App\">\n            <RegistrationContainer/>\n            <UsersTableContainer/>\n        </div>\n    );\n}\nlet mapStateToPropsUsersTable = (state) => {\n    return {\n        users: state.app.users,\n        totalItems: state.app.currentUserId,\n        CurrentPage: state.app.CurrentPage,\n        portionSize: state.app.portionSize,\n        pageSize: state.app.pageSize\n    }\n}\nlet mapDispatchToPropsUsersTable = (dispatch) => {\n    return {\n        changeCurrentPage: (page) => {\n            dispatch(changeCurrentPage(page))\n        }\n    }\n}\n\nlet mapDispatchToPropsRegistration = (dispatch) => {\n    return {\n        addUser: (date, name, email, phone, distance, payment) => {\n            dispatch(addUser(date, name, email, phone, distance, payment))\n        }\n    }\n}\nlet RegistrationContainer = connect(null, mapDispatchToPropsRegistration)(Registration)\nlet UsersTableContainer = connect(mapStateToPropsUsersTable, mapDispatchToPropsUsersTable)(UsersTable)\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {reducer as formReducer} from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\nimport {combineReducers, compose, createStore} from \"redux\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nlet reducers = combineReducers({\r\n    app: appReducer,\r\n    form: formReducer\r\n})\r\nlet store = createStore(reducers, composeEnhancers())\r\nexport default store\r\n","import 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/stable';\nimport 'date-input-polyfill-react'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/redux-store\";\n\nReactDOM.render(<Provider store={store}><App/></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"registrationForm\":\"Registration_registrationForm__3PDtS\",\"registration\":\"Registration_registration__CJxK6\",\"selectWrapper\":\"Registration_selectWrapper__1Y1d7\"};"],"sourceRoot":""}